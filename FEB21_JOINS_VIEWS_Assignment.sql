--SQL ASSIGNMENT : EMPLOYEE MANAGEMENT  SYSTEM  USIJNG JOINS AND SUBQUERIES

--EMPLOYEES TABLE 
CREATE TABLE EMPT(
EMPID INT PRIMARY KEY,
EMPNAME VARCHAR(70),
DEPTID INT,
MANAGERID INT,
HIREDATE DATE,
SALARY DECIMAL(10,2),
CONSTRAINT KF_DEPTID FOREIGN KEY (DEPTID) REFERENCES DEPTT(DEPTID),
CONSTRAINT KF_SELF FOREIGN KEY (MANAGERID) REFERENCES EMPT(EMPID),
);

INSERT INTO EMPT (EMPID, EMPNAME, DEPTID, MANAGERID, HIREDATE, SALARY) VALUES
(101, 'John Doe', 1, NULL, '2020-01-15', 50000.00),
(102, 'Jane Smith', 2, 101, '2019-03-22', 60000.00),
(103, 'Michael Johnson', 3, 101, '2018-07-11', 70000.00),
(104, 'Emily Davis', 4, 102, '2021-05-30', 55000.00),
(105, 'David Wilson', 5, 103, '2017-09-17', 65000.00),
(106, 'Sarah Brown', 6, 101, '2020-11-25', 52000.00),
(107, 'James Taylor', 7, 102, '2019-02-14', 63000.00),
(108, 'Linda Anderson', 8, 103, '2018-06-19', 72000.00),
(109, 'Robert Thomas', 9, 104, '2021-08-23', 56000.00),
(110, 'Patricia Jackson', 10, 105, '2017-12-05', 67000.00);

SELECT * FROM EMPT;

--DEPT TABLE
CREATE TABLE DEPTT(
DEPTID INT PRIMARY KEY,
DEPTNAME VARCHAR(70),
);

INSERT INTO DEPTT (DEPTID, DEPTNAME) VALUES
(1, 'HR'),
(2, 'Finance'),
(3, 'IT'),
(4, 'Marketing'),
(5, 'Sales'),
(6, 'Operations'),
(7, 'Legal'),
(8, 'R&D'),
(9, 'Customer Service'),
(10, 'Administration');

--SALARIES TABLE
CREATE TABLE SALARYT(
EMPID INT PRIMARY KEY,
BASESALARY DECIMAL(10,2),
BONUS DECIMAL(10,2),
CONSTRAINT SL FOREIGN KEY(EMPID) REFERENCES EMPT(EMPID),
);

INSERT INTO SALARYT (EMPID, BASESALARY, BONUS) VALUES
(101, 50000.00, 5000.00),
(102, 60000.00, 6000.00),
(103, 70000.00, 7000.00),
(104, 55000.00, 5500.00),
(105, 65000.00, 6500.00),
(106, 52000.00, 5200.00),
(107, 63000.00, 6300.00),
(108, 72000.00, 7200.00),
(109, 56000.00, 5600.00),
(110, 67000.00, 6700.00);

--TASK 1:
SELECT EMPNAME, DEPTNAME, HIREDATE FROM EMPT E INNER JOIN DEPTT D ON E.DEPTID=D.DEPTID;

--TASK 2:
SELECT * FROM EMPT E LEFT JOIN EMPT E1 ON E.MANAGERID=E1.EMPID WHERE E.MANAGERID IS NULL;     

--TASK 3:
SELECT DEPTNAME FROM EMPT E LEFT JOIN DEPTT D ON E.DEPTID=D.DEPTID WHERE E.EMPID IS NULL;

--TASK 4: 
SELECT E.EMPID, E.EMPNAME, S.BASESALARY, S.BONUS, (S.BASESALARY+ S.BONUS) AS TOTALSALARY FROM EMPT E LEFT JOIN SALARYT S ON E.EMPID= S.EMPID;

--TASK 5:
SELECT E.EMPNAME FROM EMPT E LEFT JOIN SALARYT S ON E.EMPID= S.EMPID WHERE S.BASESALARY=(SELECT MAX(BASESALARY) FROM SALARYT);

--TASK 6:
SELECT E.EMPNAME, E.EMPID, E1.EMPNAME FROM EMPT E JOIN EMPT E1 ON E.MANAGERID=E1.EMPID JOIN SALARYT S ON E.EMPID=S.EMPID JOIN SALARYT SA ON E1.EMPID=SA.EMPID WHERE S.BASESALARY > SA.BASESALARY;

--TASK 7:
CREATE VIEW ESV AS SELECT E.EMPID, E.EMPNAME, D.DEPTNAME, S.BASESALARY, S.BONUS FROM EMPT E JOIN SALARYT S ON E.EMPID=S.EMPID JOIN DEPTT D ON E.DEPTID=D.DEPTID;

--TASK 8:
SELECT EMPNAME, HIREDATE FROM EMPT WHERE DATEDIFF(YEAR, HIREDATE, GETDATE())>3;

--TASK 9:
SELECT D.DEPTNAME, COUNT(E.EMPID) ASEMPLOYEECOOUNT FROM DEPTT D LEFT JOIN EMPT E  ON D.DEPTID=E.DEPTID GROUP BY D.DEPTNAME;
